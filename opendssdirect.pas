function ActiveClassI(mode:longint; arg: longint):longint; cdecl;
function ActiveClassS(mode:longint; arg: pAnsiChar):pAnsiChar; cdecl;
function ActiveClassV(mode:longint; out arg:variant); cdecl;
function AddInAuxCurrents(SType: integer); cdecl;
function BUSF(mode: longint; arg: double): double; cdecl;
function BUSI(mode: longint; arg: longint): longint; cdecl;
function BUSS(mode: longint; arg: pAnsiChar): pAnsiChar; cdecl;
function BUSV(mode: longint; out arg:Variant); cdecl;
function BuildYMatrixD(BuildOps, AllocateVI: longint); cdecl;
function CapControlsF(mode:longint; arg:double):double;cdecl;
function CapControlsI(mode:longint; arg:longint):longint;cdecl;
function CapControlsS(mode:longint; arg:pAnsiChar):pAnsiChar;cdecl;
function CapControlsV(mode:longint; out arg:variant);cdecl;
function CapacitorsF(mode:longint; arg: double):double;cdecl;
function CapacitorsI(mode:longint; arg: longint):longint;cdecl;
function CapacitorsS(mode:longint; arg: pAnsiChar):pAnsiChar;cdecl;
function CapacitorsV(mode:longint; out arg:variant);cdecl;
function CircuitF(mode:longint; arg1, arg2: double):double;cdecl;
function CircuitI(mode:longint; arg: longint):longint;cdecl;
function CircuitS(mode:longint; arg: pAnsiChar):pAnsiChar;cdecl;
function CircuitV(mode:longint; out arg:variant; arg2: longint);cdecl;
function CktElementF(mode:longint; arg:double):double;cdecl;
function CktElementI(mode:longint; arg:longint):longint;cdecl;
function CktElementS(mode:longint; arg:pAnsiChar):pAnsiChar;cdecl;
function CktElementV(mode:longint; out arg:variant);cdecl;
function CmathLibF(mode:longint; arg1:double; arg2:double):double;cdecl;
function CmathLibV(mode:longint; Realpart:double; ImagPart:double; out arg: variant);cdecl;
function CtrlQueueI(mode: longint; arg: longint):longint;cdecl;
function CtrlQueueV(mode:longint; out arg:variant);cdecl;
function DSSElementI(mode:longint; arg: longint):longint;cdecl;
function DSSElementS(mode:longint; arg: pAnsiChar):pAnsiChar;cdecl;
function DSSElementV(mode: longint; out arg:variant);cdecl;
function DSSExecutiveI(mode:longint; arg:longint):longint;cdecl;
function DSSExecutiveS(mode:longint; arg:pAnsiChar):pAnsiChar;cdecl;
function DSSI(mode:longint;arg:longint):longint;cdecl;
function DSSLoads(mode:longint; arg:longint):longint; cdecl;
function DSSLoadsF(mode:longint; arg:double):double; cdecl;
function DSSLoadsS(mode:longint; arg:pAnsiChar):pAnsiChar; cdecl;
function DSSLoadsV(mode:longint; out arg:variant); cdecl;
function DSSProgressI(mode: longint; arg: longint): longint; cdecl;
function DSSProgressS(mode: longint; arg: pAnsiChar): pAnsiChar; cdecl;
function DSSProperties(mode:longint; arg:pAnsiChar):pAnsiChar; cdecl;
function DSSPut_Command(a:PAnsiChar):PAnsiChar;cdecl;
function DSSS(mode:longint;arg:pAnsiChar):pAnsiChar;cdecl;
function DSSV(mode:longint;out arg:variant);cdecl;
function ErrorCode():longint;cdecl;
function ErrorDesc():pAnsiChar;cdecl;
function FusesF(mode:longint;arg:double):double;cdecl;
function FusesI(mode:longint;arg:longint):longint;cdecl;
function FusesS(mode:longint;arg:pAnsiChar):pAnsiChar;cdecl;
function FusesV(mode:longint;out arg:variant);cdecl;
function GeneratorsF(mode: longint; arg: double): double; cdecl;
function GeneratorsI(mode: longint; arg: longint): longint; cdecl;
function GeneratorsS(mode: longint; arg: pAnsiChar): pAnsiChar; cdecl;
function GeneratorsV(mode: longint; out arg:variant); cdecl;
function GetCompressedYMatrix(hY:NativeUInt; nBus, nNz:Longword; Var ColPtr, RowIdx:pIntegerArray; Var cVals:pComplexArray); cdecl;
function GetPCInjCurr; cdecl;
function GetSourceInjCurrents; cdecl;
function InitAndGetYparams(var hY:NativeUInt; var nBus, nNZ:LongWord): Longword; cdecl;
function IsourceF(mode:longint;arg:double):double;cdecl;
function IsourceI(mode:longint;arg:longint):Longint;cdecl;
function IsourceS(mode:longint;arg:pAnsiChar):pAnsiChar;cdecl;
function IsourceV(mode:longint;out arg:variant);cdecl;
function LineCodesF(mode: longint; arg: double): double; cdecl;
function LineCodesF(mode: longint; arg: double): double; cdecl;
function LineCodesI(mode: longint; arg: longint): longint; cdecl;
function LineCodesI(mode: longint; arg: longint): longint; cdecl;
function LineCodesS(mode: longint; arg: pAnsiChar): pAnsiChar; cdecl;
function LineCodesS(mode: longint; arg: pAnsiChar): pAnsiChar; cdecl;
function LineCodesV(mode: longint; out arg:variant);cdecl;
function LineCodesV(mode: longint; out arg:variant);cdecl;
function LinesF(mode: longint; arg: double): double; cdecl;
function LinesF(mode: longint; arg: double): double; cdecl;
function LinesI(mode: longint; arg: longint): longint; cdecl;
function LinesS(mode: longint; arg: pAnsiChar): pAnsiChar; cdecl;
function LinesS(mode: longint; arg: pAnsiChar): pAnsiChar; cdecl;
function LinesV(mode: longint; out arg:variant);cdecl;
function LinesV(mode: longint; out arg:variant);cdecl;
function LoadShapeF(mode:longint; arg:double):double;cdecl;
function LoadShapeI(mode:longint; arg:longint):longint;cdecl;
function LoadShapeS(mode:longint; arg:pAnsiChar):pAnsiChar;cdecl;
function LoadShapeV(mode:longint; out arg:variant);cdecl;
function MetersF(mode: longint; arg: double):double;cdecl;
function MetersI(mode: longint; arg: longint):Longint;cdecl;
function MetersS(mode: longint; arg: pAnsiChar):pAnsiChar;cdecl;
function MetersV(mode: longint; out arg:variant);cdecl;
function MonitorsI(mode:longint; arg: longint):longint; cdecl;
function MonitorsS(mode:longint; arg: pAnsiChar):pAnsiChar; cdecl;
function MonitorsV(mode:longint; out arg:variant); cdecl;
function PDElementsF(mode:longint; arg:double):double;cdecl;
function PDElementsI(mode:longint; arg:longint):longint;cdecl;
function PDElementsS(mode:longint; arg:pAnsiChar):pAnsiChar;cdecl;
function PVsystemsF(mode:longint;arg:double):double;cdecl;
function PVsystemsI(mode:longint;arg:longint):longint;cdecl;
function PVsystemsS(mode:longint;arg:pAnsiChar):pAnsiChar;cdecl;
function PVsystemsV(mode:longint;out arg:variant);cdecl;
function ParserF(mode: longint; arg:double):double;cdecl;
function ParserI(mode: longint; arg:longint):longint;cdecl;
function ParserS(mode: longint; arg:pAnsiChar):pAnsiChar;cdecl;
function ParserV(mode: longint; var arg:variant);cdecl;
function ReclosersF(mode:longint;arg:double):double;cdecl;
function ReclosersI(mode:longint;arg:longint):longint;cdecl;
function ReclosersS(mode:longint;arg:pAnsiChar):pAnsiChar;cdecl;
function ReclosersV(mode:longint;out arg:variant);cdecl;
function RegControlsF(mode: longint; arg: double):double ;cdecl;
function RegControlsI(mode: longint; arg: longint):longint ;cdecl;
function RegControlsS(mode: longint; arg: pAnsiChar):pAnsiChar ;cdecl;
function RegControlsV(mode: longint; out arg: variant) ;cdecl;
function RelaysI(mode:longint;arg:longint):longint;cdecl;
function RelaysS(mode:longint;arg:pAnsiChar):pAnsiChar;cdecl;
function RelaysV(mode:longint;out arg:variant);cdecl;
function SensorsF(mode:longint; arg:double):double;cdecl;
function SensorsI(mode:longint; arg:longint):longint;cdecl;
function SensorsS(mode:longint; arg:pAnsiChar):pAnsiChar;cdecl;
function SensorsV(mode:longint; out arg:variant);cdecl;
function SettingsF(mode: longint; arg: double):double;cdecl;
function SettingsI(mode: longint; arg: longint):longint;cdecl;
function SettingsS(mode: longint; arg: pAnsiChar):pAnsiChar;cdecl;
function SettingsV(mode:longint; out arg:variant); cdecl;
function SolutionF(mode:longint; arg: double):double; cdecl;
function SolutionI(mode:longint; arg: longint):longint; cdecl;
function SolutionS(mode:longint; arg: pAnsiChar):pAnsiChar; cdecl;
function SolutionV(mode:longint; out arg:Variant); cdecl;
function SolveSystem(var NodeV:pNodeVarray): integer; cdecl;
function SwtControlsF(mode: longint; arg: double): double; cdecl;
function SwtControlsI(mode: longint; arg: longint): longint; cdecl;
function SwtControlsS(mode: longint; arg: pAnsiChar): pAnsiChar; cdecl;
function SwtControlsV(mode: longint; out arg: variant); cdecl;
function SystemYChanged(mode, arg: longint): longint; cdecl;
function TopologyI(mode:longint; arg:longint):longint;cdecl;
function TopologyS(mode:longint; arg:pAnsiChar):pAnsiChar;cdecl;
function TopologyV(mode:longint; out arg:variant);cdecl;
function TransformersF(mode: longint; arg: double):double; cdecl;
function TransformersI(mode: longint; arg: longint):longint; cdecl;
function TransformersS(mode: longint; arg: pAnsiChar):pAnsiChar; cdecl;
function TransformersV(mode: longint; out arg: variant); cdecl;
function UseAuxCurrents(mode, arg: longint): longint; cdecl;
function VsourcesF(mode:longint;arg:double):double;cdecl;
function VsourcesI(mode:longint;arg:longint):Longint;cdecl;
function VsourcesS(mode:longint;arg:pAnsiChar):pAnsiChar;cdecl;
function VsourcesV(mode:longint;out arg:variant);cdecl;
function XYCurvesF(mode:longint;arg:double):double;cdecl;
function XYCurvesI(mode:longint;arg:longint):longint;cdecl;
function XYCurvesS(mode:longint;arg:pAnsiChar):pAnsiChar;cdecl;
function XYCurvesV(mode:longint; var arg:variant);cdecl;
function ZeroInjCurr; cdecl;
function getIpointer(var IvectorPtr: pNodeVarray);cdecl;
function getVpointer(var VvectorPtr: pNodeVarray);cdecl;